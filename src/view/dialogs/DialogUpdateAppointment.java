/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.dialogs;

import dao.AppointmentDaoImpl;
import dao.DepartmentDaoImpl;
import dao.DoctorDaoImpl;
import dao.PatientDaoImpl;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.lang.invoke.ConstantCallSite;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import model.Appointment;
import model.Department;
import model.Doctor;
import model.Patient;
import util.Constants;

/**
 *
 * @author Lenovo
 */
public class DialogUpdateAppointment extends javax.swing.JDialog implements ItemListener{

    private Appointment appointment;
    private AppointmentDaoImpl appointmentDaoImpl = new AppointmentDaoImpl();
    private DoctorDaoImpl doctorDaoImpl = new DoctorDaoImpl();
    private PatientDaoImpl patientDaoImpl = new PatientDaoImpl();
    private DepartmentDaoImpl departmentDaoImpl = new DepartmentDaoImpl();
    private Map<String, Integer> map = new HashMap<>();
    
    public DialogUpdateAppointment(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    public DialogUpdateAppointment(Appointment appointment) {
        this(new javax.swing.JFrame(), true);
        this.appointment = appointment;
        customInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel18 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jComboBoxPatient = new javax.swing.JComboBox<>();
        jComboBoxDepartment = new javax.swing.JComboBox<>();
        jComboBoxDoctor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonUpdateAppointment = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jPanel24 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel18.setBackground(new java.awt.Color(54, 71, 96));

        jPanel20.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jComboBoxPatient.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));

        jComboBoxDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));
        jComboBoxDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxDepartmentItemStateChanged(evt);
            }
        });

        jComboBoxDoctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none" }));

        jLabel2.setText("Select Patient");

        jLabel3.setText("Select Department");

        jLabel4.setText("Select Doctor");

        jButtonUpdateAppointment.setText("Update Appointment");
        jButtonUpdateAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateAppointmentActionPerformed(evt);
            }
        });

        jLabel5.setText("Date and Time");

        jDateChooser1.setDateFormatString("MMM d, yyyy HH:mm:ss");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonUpdateAppointment)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxPatient, 0, 200, Short.MAX_VALUE)
                            .addComponent(jComboBoxDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxDoctor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(302, 302, 302))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxPatient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jButtonUpdateAppointment)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("MV Boli", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("UPDATE APPOINTMENT");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxDepartmentItemStateChanged

    }//GEN-LAST:event_jComboBoxDepartmentItemStateChanged

    private void jButtonUpdateAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateAppointmentActionPerformed
        String patient = jComboBoxPatient.getSelectedItem().toString();
        int idPatient = Integer.parseInt(getIdFromFullnameAndPin(patient));

        String doctor = jComboBoxDoctor.getSelectedItem().toString();
        int idDoctor = Integer.parseInt(getIdFromFullnameAndPin(doctor));

        Date dateAndTime = jDateChooser1.getDate();

        boolean result = appointmentDaoImpl.updateAppointment(idPatient, idDoctor, dateAndTime, appointment.getId());
        if (result) {
            JOptionPane.showMessageDialog(this, Constants.MESSAGE_APPOINTMENT_UPDATED);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, Constants.MESSAGE_ERROR);
        }
    }//GEN-LAST:event_jButtonUpdateAppointmentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogUpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogUpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogUpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogUpdateAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DialogUpdateAppointment dialog = new DialogUpdateAppointment(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonUpdateAppointment;
    private javax.swing.JComboBox<String> jComboBoxDepartment;
    private javax.swing.JComboBox<String> jComboBoxDoctor;
    private javax.swing.JComboBox<String> jComboBoxPatient;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel24;
    // End of variables declaration//GEN-END:variables

    private void customInit() {
        map.put("accident and emergency", 1);
        map.put("anaesthetics", 2);
        map.put("cardiology", 3);
        map.put("oncology", 4);
        map.put("diagnostic imaging", 5);
        map.put("ear nose and throat", 6);
        map.put("gastroenterology", 7);
        map.put("general surgery", 8);
        map.put("nutrition and dietetics", 9);
        map.put("neurology", 10);
        map.put("rheumatology", 11);
        
        setPatient();
        setDepartment();
        setDoctor(appointment.getDoctor().getDepartment().getDepartment_name());
        
        jComboBoxPatient.setSelectedItem(appointment.getPatient().getId() + " - " + appointment.getPatient().getFirstName() + " " + appointment.getPatient().getLastName() + " " + "(" + appointment.getPatient().getPin() + ")");
        jComboBoxDepartment.setSelectedItem(appointment.getDoctor().getDepartment().getDepartment_name());
        jComboBoxDoctor.setSelectedItem(appointment.getDoctor().getId() + " - " + appointment.getDoctor().getFirstName() + " " + appointment.getDoctor().getLastName() + " " + "(" + appointment.getDoctor().getPin() + ")");
        
        jComboBoxDepartment.addItemListener(this);
    }

    private void setPatient() {
        List<Patient> patients = patientDaoImpl.getAllPanients();
        
        for (Patient patient : patients) {
            String fullnameAndPin =patient.getId() + " - " + patient.getFirstName() + " " + patient.getLastName() + " " + "(" + patient.getPin() + ")";
            
            jComboBoxPatient.addItem(fullnameAndPin);
        }
    }

    private void setDepartment() {
        List<Department> departments = departmentDaoImpl.getAllDepartments();
        
        for (Department department : departments) {
            jComboBoxDepartment.addItem(department.getDepartment_name());
        }
    }

    @Override
    public void itemStateChanged(ItemEvent ie) {
        if (ie.getStateChange() == ItemEvent.SELECTED) {
            String selectedDepartment = jComboBoxDepartment.getSelectedItem().toString();
            int id_department = map.get(selectedDepartment);
        
            List<Doctor> doctors = doctorDaoImpl.getDoctorsByDepartment(id_department);
            jComboBoxDoctor.removeAllItems();
            for (Doctor doctor : doctors) {
                String fullnameAndPin =doctor.getId() + " - " + doctor.getFirstName() + " " + doctor.getLastName() + " " + "(" + doctor.getPin() + ")";
                jComboBoxDoctor.addItem(fullnameAndPin);
            }
        }
    }
    
    private String getIdFromFullnameAndPin(String str) {        
        String[] array = str.split(" ");
        String id = array[0].trim();
        
        return id;
    }

    private void setDoctor(String departmentName) {
        List<Doctor> doctors = doctorDaoImpl.getDoctorsByDepartment(departmentName);
        jComboBoxDoctor.removeAllItems();
            for (Doctor doctor : doctors) {
                String fullnameAndPin =doctor.getId() + " - " + doctor.getFirstName() + " " + doctor.getLastName() + " " + "(" + doctor.getPin() + ")";
                jComboBoxDoctor.addItem(fullnameAndPin);
            }
    }
}
